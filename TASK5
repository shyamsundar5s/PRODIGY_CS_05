from scapy.all import *
import os

# Function to analyze each packet
def packet_callback(packet):
    # Extracting the IP layer
    if IP in packet:
        src_ip = packet[IP].src
        dst_ip = packet[IP].dst
        protocol = packet[IP].proto
        
        # Display packet details
        print(f"Packet: {src_ip} -> {dst_ip} | Protocol: {protocol}")
        
        # If the packet has a payload, print the raw payload
        if Raw in packet:
            print(f"Payload: {packet[Raw].load}")
        print("-" * 50)

# Main function to start sniffing packets
def start_sniffing(interface):
    print(f"Sniffing on interface: {interface}")
    # Use the sniff function to capture packets on the specified interface
    sniff(iface=interface, prn=packet_callback, store=0)

if _name_ == "_main_":
    # Run with appropriate interface, e.g., "eth0" for Linux or "Wi-Fi" for Windows
    interface = input("Enter the network interface (e.g., eth0, Wi-Fi): ")
    
    try:
        start_sniffing(interface)
    except PermissionError:
        print("Error: You need administrative privileges to run this tool.")
    except Exception as e:
        print(f"An error occurred: {str(e)}")
